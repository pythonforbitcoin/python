#存放家具
#C:\Users\gaowei\AppData\Roaming\Sublime Text 3\Packages\User
两个对象之间的调用
class Home:
    def __init__(self,area):
        self.area = area
        self.containsItem = []
        
        
    def __str__(self):
        msg  = "家当前可用面积为:"+str(self.area)
        msg += "\n"
        msg += "当前家里的物品有:"
        #msg += ",".join(self.containsItem)
        for temp in self.containsItem:  
            msg += temp.name
        
        return msg
    #添加新物品
    def addItem(self,item):
    
        self.containsItem.append(item)
        
    
    
class Bed:
    def __init__(self,name,area):
        self.name = name
        self.area = area
         
    def __str__(self):
        msg = self.name +" 床的面积为"+ str(self.area)
        return msg
        
home = Home(128)
#print(home)
bed = Bed("席梦思",4)
print(bed)

bed2 = Bed("硬板床",3)
print(bed2)

home.addItem(bed2)


home.addItem("沙发:")
print(home)





class Ren:
    def __init__(self,name):
        self.name = name
        self.xue = 100
        self.qiang = None
    def __str__(self):
        return self.name + "剩余血量" + str(self.xue)
    def anzidan(self,danjia,zidan):
        danjia.baocunzidan(zidan)
    def andanjia(self,qiang,danjia):
        qiang.lianjiedanjia(danjia)
    def naqiang(self,qiang):
        self.qiang = qiang
    def kaiqiang(self,diren):
        self.qiang.she(diren)
    def diaoxue(self,shangshangli):
        self.xue -= shashangli
        
        
        
        
    pass
class Danjia:
    def __init__(self,rongliang):
        self.rongliang = rongliang 
        self.rongnaList = []
    def __str__(self):
        return "弹夹当前的子弹数量为" + str(len(self.rongnaList)) +"/" + str(self.rongliang)
        
    def baocunzidan(self,zidan):
        if len(self.rongnaList)<self.rongliang:
            self.rongnaList.append(zidan)
    def chuzidan(self):
        #判断弹夹中是否还有子弹
        if len(self.rongnaList)>0:
            zidan = self.rongnaList[-1]
            self.rongnaList.pop()
            

            return zidan
        else:
            return None
            
           
            
            
        
    pass
class Zidan:
    def __init__(self,shashangli):
        self.shashangli = shashangli
    def shanghaili(self,diren):
        diren.diaoxue(self.shashangli)
    pass
class Qiang:
    def __init__(self):
        self.danjia = None
    def __str__(self):
        if self.danjia:
            return "枪当前有弹夹:"
        else:
            return "枪当前没有弹夹“::"
        
        
    def lianjiedanjia(self,danjia):
        if not self.danjia:
            self.danjia = danjia
    def she(self,diren):
       zidan = self.danjia.chuzidan()
       if zidan:
           zidan.shanghai(diren)
       else:
           print("没有子弹了，放了空枪:")
            
        
laowang = Ren("老王")
danjia = Danjia(20)
print(danjia)

i = 0
while i<5:
    zidan = Zidan(5)
    laowang.anzidan(danjia,zidan)
    i+=1
print(danjia)
qiang = Qiang()
print(qiang)
laowang.andanjia(qiang,danjia)
print(qiang) 

#创建一个敌人
diren = Ren("敌人")
print(diren)

laowang.naqiang(qiang)
laowang.kaiqiang(diren)
print(diren)
laowang.kaiqiang(diren)
print(diren)
  



zidan = Zidan()
laowang.anzidan(danjia,zidan)
print(danjia)

