import pygame
import time
import random
from pygame.locals import *

class HeroPlane(object):

    def __init__(self,screen):
        #设置飞机默认位置
        self.x = 230
        self.y = 600
        self.screen = screen
        self.imageName = "./feiji/hero.gif"
        self.image = pygame.image.load(self.imageName).convert()
        #用来存储英雄飞机发射的子弹
        
        self.bulletList = []
        
        
    def display(self):
       #更新飞机的位置
        self.screen.blit(self.image,(self.x,self.y))
        #判断子弹是否越界，如果是的话，就要删除子弹来稳定内存


        #存放需要删除的对象的信息
        needDelItemList = []

        
        for i in self.bulletList:
            if i.judge():
                needDelItemList.append(i)

        for i in needDelItemList:
            self.bulletList.remove(i)
            
                
            
        #更新所有子弹的位置
        for bullet in self.bulletList:
            bullet.display()
            bullet.move()
    
        
    def sheBullet(self):
        newBullet = Bullet(self.x,self.y,self.screen)
        self.bulletList.append(newBullet)
        pass

    def moveLeft(self):
        self.x -= 8

    def moveRight(self):
        self.x += 8

    def moveUp(self):
        self.y -= 8

    def moveDown(self):
        self.y += 8

class EnemyPlane(object):

    def __init__(self,screen):
        #设置飞机默认位置
        self.x = 0
        self.y = 0
        self.screen = screen
        self.imageName = "./feiji/enemy-1.gif"
        self.image = pygame.image.load(self.imageName).convert()
        #用来存储敌人飞机发射的子弹
        
        self.bulletList = []

        
        self.direction = "right" 
        
    def display(self):
        self.screen.blit(self.image,(self.x,self.y))
        #判断子弹是否越界，如果是的话，就要删除子弹来稳定内存


        #存放需要删除的对象的信息
        needDelItemList = []

        
        for i in self.bulletList:
            if i.judge():
                needDelItemList.append(i)

        for i in needDelItemList:
            self.bulletList.remove(i)
            
                
            
        #更新所有子弹的位置
        for bullet in self.bulletList:
            bullet.display()
            bullet.move()

        

    def move(self):
        #起始位置向右的时候向左移动，起始位置在做的时候向右移动
        if self.direction == "right":
            self.x += 2
        elif self.direction == "left":
            self.x -= 2

        if self.x > 480:
            self.direction = "left"
        elif self.x < 0:
            self.direction = "right"
            

            time.sleep(0.05) 
         
    def sheBullet(self):
        num = random.randint(30,100)
        if num == 88:
            newBullet = EnemyBullet(self.x,self.y,self.screen)
            self.bulletList.append(newBullet)
            
        
     
class Bullet(object):
    def __init__(self,x,y,screen):
        self.x = x+40
        self.y = y-20
        self.screen = screen
        self.image = pygame.image.load("./feiji/bullet-3.gif").convert()

    def move(self):
        self.y -= 2

    def display(self):
        self.screen.blit(self.image,(self.x,self.y))

    def judge(self):
        if self.y< 0:
            return True
        else:
            return False
        



class EnemyBullet(object):
    def __init__(self,x,y,screen):
        self.x = x+40
        self.y = y+30
        self.screen = screen
        self.image = pygame.image.load("./feiji/bullet-1.gif").convert()

    def move(self):
        self.y += 2

    def display(self):
        self.screen.blit(self.image,(self.x,self.y))

    def judge(self):
        if self.y>890:
            return True
        else:
            return False
        



        

        
        
        


if __name__ == "__main__":

    #创建一个窗口用来显示内容
    screen = pygame.display.set_mode((480,890),0,32)
    
    #创建一个和窗口大小一直的图片用来充当背景
    background = pygame.image.load("./feiji/background.png").convert()

    #测试用来创建一个玩家飞机的图片
    # hero = pygame.image.load("./feiji/hero.gif").convert()

    heroPlane = HeroPlane(screen)

    enemyPlane = EnemyPlane(screen)

    #创建一个子弹
    #bullet = pygame.image.load("./feiji/bullet.png").convert()
    
    
    #把背景图片放到窗口中显示
    while True:
        screen.blit(background,(0,0))
        #screen.blit(hero,(0,0))
        heroPlane.display()
        enemyPlane.move()
        enemyPlane.sheBullet()
        enemyPlane.display()
        
        
        
        #判断是否点击了推出按钮
        for event in pygame.event.get():
            if event.type == QUIT:
                print("exit")
                exit()
            elif event.type == KEYDOWN:
                if event.key == K_a or event.key == K_LEFT:
                    print("left")
                    heroPlane.moveLeft()
                    
                elif event.key == K_d or event.key == K_RIGHT:
                    print("right")

             
                    heroPlane.moveRight()
                elif event.key == K_w or event.key == K_UP:
                    print("up")
                    heroPlane.moveUp()

                elif event.key == K_s or event.key == K_DOWN:
                    print("down")
                    heroPlane.moveDown()
                
                
                elif event.key == K_SPACE:
                    print('space')
                    heroPlane.sheBullet()
            time.sleep(0.01)
                    
        pygame.display.update()
    
